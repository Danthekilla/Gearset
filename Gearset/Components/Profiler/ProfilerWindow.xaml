<Window x:Class="Gearset.Components.Profiler.ProfilerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:local="clr-namespace:Gearset.Components.InspectorWPF"
    xmlns:profiler="clr-namespace:Gearset.Components.Profiler"
    xmlns:behaviours="clr-namespace:Wpf.Behaviours"
    Title="Profiler"
    Height="260"
    Width="700"
    FontSize="11"
    Background="{DynamicResource background1}"
    Foreground="{DynamicResource normalText1}"
    WindowStyle="None"
    UseLayoutRounding="True"
    Icon="..\..\Cog.ico"
    ShowInTaskbar="False"
    ShowActivated="False">

    <Window.Resources>        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Common\CommonStyle.xaml"/>
                <ResourceDictionary Source="..\Common\ScrollViewerStyle.xaml"/>
                <ResourceDictionary>
                    <!--LogItems inside group-->
                    <DataTemplate x:Key="logContentTemplate">
                        <TextBlock Name="textblock" Text="{Binding Path=Content}"
                                               Foreground="{Binding Path=Level.Color}"
                                               HorizontalAlignment="Stretch" MinWidth="200"/>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="true">
                                <Setter TargetName="textblock" Property="Foreground" Value="{DynamicResource highlightText1}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!--Levels-->
                    <DataTemplate x:Key="levelTemplate" DataType="profiler:LevelItem">
                        <DockPanel>
                            <CheckBox DockPanel.Dock="Left" IsChecked="{Binding Path=Enabled}" Margin="0 0 5 0"/>
                            <TextBlock Text="{Binding Name}" Foreground="{Binding Color}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Solo" Click="Solo_Click"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DockPanel>
                    </DataTemplate>

                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="Background" Value="{DynamicResource normal1}"/>
                        <Setter Property="Foreground" Value="{DynamicResource normalText1}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource normal1}" />
                        <Setter Property="OverridesDefaultStyle" Value="false"/>
                        <Setter Property="Height" Value="22"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    

                    <Style x:Key="timingsStyle" TargetType="{x:Type ListView}">
                        <Setter Property="Foreground" Value="{DynamicResource normalText1}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="ItemContainerStyle" Value="{StaticResource gridViewItemStyle}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
  
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>


        <!--Tool Bar-->
        <DockPanel Grid.Row="0" Grid.ColumnSpan="3">
            <Button DockPanel.Dock="Right" Name="CloseButton" Width="16" Height="16" Click="CloseClick">
                <Image Width="7" Height="7">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="../Common/icon_close.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="../Common/icon_close_over.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Button DockPanel.Dock="Right" Name="MaximizeButton" Width="16" Height="16" Click="MaximizeClick">
                <Image Width="9" Height="7">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="../Common/icon_maximize.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="../Common/icon_maximize_over.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Button DockPanel.Dock="Right" Width="Auto" Content="Save log" Click="MenuItem_Click"/>

            <!--Left side-->
            <Image DockPanel.Dock="Left" Width="12" Margin="0 0 2 0" Source="../Common/icon_title.png"/>
            <TextBlock DockPanel.Dock="Left" FontSize="12" Foreground="White" MouseLeftButtonDown="TitleBarMouseLeftButtonDown">Profiler</TextBlock>
            <Rectangle Fill="Transparent" MouseLeftButtonDown="TitleBarMouseLeftButtonDown"/>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <!-- Levels -->
                <ColumnDefinition Width="2*"/>
                <!-- Splitter -->
                <ColumnDefinition Width="Auto"/>
                <!-- Summary -->
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <!--<Rectangle Fill="Red" Grid.Column="1"/>-->
            <GridSplitter Grid.Column="1" Background="{DynamicResource highlight1}" Width="4" VerticalAlignment="Stretch" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" />

            <TabControl Grid.Column="0">
                <TabItem Header="Performance Graph">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
             
                        <!-- Performance Graph -->
                        <DockPanel Grid.Column="0" Grid.Row="1">
                            <!-- Action Buttons -->
                            <Border DockPanel.Dock="Top" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource border1}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Button Width="Auto" Name="pgEnableAllButton" Click="pgEnableAllButton_Click">Show All</Button>
                                    <Button Width="Auto" Name="pgDisableAllButton" Click="pgDisableAllButton_Click">Hide All</Button>
                                </StackPanel>
                            </Border>
                            <!-- Levels ListView -->
                            <ListView Name="pgLevelsListBox" ItemsSource="{Binding}" ItemTemplate="{StaticResource levelTemplate}" Background="Transparent" />
                        </DockPanel>

                    </Grid>
                </TabItem>
                <TabItem Header="Time Ruler">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <!-- Performance Graph -->
                        <DockPanel Grid.Column="0" Grid.Row="1">
                            <!-- Action Buttons -->
                            <Border DockPanel.Dock="Top" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource border1}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Button Width="Auto" Name="trEnableAllButton" Click="trEnableAllButton_Click">Show All</Button>
                                    <Button Width="Auto" Name="trDisableAllButton" Click="trDisableAllButton_Click">Hide All</Button>
                                </StackPanel>
                            </Border>
                            <!-- Levels ListView -->
                            <ListView Name="trLevelsListBox" ItemsSource="{Binding}" ItemTemplate="{StaticResource levelTemplate}" Background="Transparent" />
                        </DockPanel>

                    </Grid>
                </TabItem>
            </TabControl>

            <ListView Name="lvTimingSummary" Grid.Column="2" Style="{StaticResource timingsStyle}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="150">
                            <GridViewColumnHeader Content="Name" />
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding Color}" Height="12" Width="12" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                                        <TextBlock Text="{Binding Name}" Foreground="{DynamicResource normalText1}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="50">
                            <GridViewColumnHeader Content="Time" />
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Time}" HorizontalAlignment="Right"></TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" Foreground="White" Text="{Binding Name}" Margin="10,0,0,0"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </Grid>
    </Grid>

</Window>
